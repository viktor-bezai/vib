name: Deploy to VPS

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Fix git safe directory
            git config --global --add safe.directory /var/www/viktorbezai

            # Navigate to project directory
            cd /var/www/viktorbezai

            # Stash any local changes to avoid conflicts
            git stash

            # Fetch latest changes
            git fetch origin master

            # Reset to match origin/master exactly
            git reset --hard origin/master

            # Clean any untracked files
            git clean -fd
            
            # Copy production environment file if exists
            [ -f .env.production ] && cp .env.production .env

            # Aggressive cleanup for small droplet
            echo "Cleaning up disk space..."
            docker system prune -af --volumes --filter "until=1h" || true
            docker builder prune -af --filter "until=1h" || true

            # Remove stopped containers and old images
            docker container prune -f || true
            docker image prune -af || true

            # Stop existing containers
            echo "Stopping containers..."
            docker-compose -f docker-compose.prod.yml down --remove-orphans

            # Build and start backend (one at a time to save space)
            echo "Building and starting backend..."
            docker-compose -f docker-compose.prod.yml build --no-cache vib-backend
            docker-compose -f docker-compose.prod.yml up -d vib-backend

            # Clean up after backend build
            docker builder prune -af --filter "until=1m" || true

            # Build and start frontend
            echo "Building and starting frontend..."
            docker-compose -f docker-compose.prod.yml build --no-cache vib-frontend
            docker-compose -f docker-compose.prod.yml up -d vib-frontend

            # Final cleanup
            docker builder prune -af || true
            docker image prune -af || true

            # Wait for backend to be ready
            echo "Waiting for backend to start..."
            sleep 15

            # Run migrations
            echo "Running migrations..."
            docker-compose -f docker-compose.prod.yml exec -T vib-backend python manage.py migrate || echo "Migration failed, continuing..."

            # Fix permissions as root user
            echo "Fixing permissions..."
            docker-compose -f docker-compose.prod.yml exec -T -u root vib-backend bash -c "
                rm -rf /app/staticfiles/*
                mkdir -p /app/staticfiles /app/media
                chown -R appuser:appgroup /app/staticfiles /app/media
                chmod -R 755 /app/staticfiles /app/media
            " || echo "Permission fix failed, continuing..."

            # Collect static files as appuser
            echo "Collecting static files..."
            docker-compose -f docker-compose.prod.yml exec -T vib-backend python manage.py collectstatic --noinput || echo "Collectstatic failed, continuing..."

            # Check container status
            echo "Deployment complete! Container status:"
            docker-compose -f docker-compose.prod.yml ps