name: Review Pull Request

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - preview  # Only run when PR targets the preview branch

permissions:
  contents: write
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    # Only run if the target branch is preview
    if: github.event.pull_request.base.ref == 'preview'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all branches and history

    - name: Fetch base branch
      run: git fetch origin ${{ github.event.pull_request.base.ref }}

    - name: Generate Diff
      run: git diff origin/${{ github.event.pull_request.base.ref }}...HEAD > changes.diff

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: pip install openai jq

    - name: Run OpenAI Review
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: python analyze_code.py > feedback.txt

    - name: Debug Feedback Content
      run: |
        echo "Feedback content:"
        cat feedback.txt

    - name: Escape Feedback Content
      id: escape-feedback
      run: |
        feedback=$(<feedback.txt)
        escaped_feedback=$(echo "$feedback" | jq -Rsa .)
        echo "escaped_feedback=$escaped_feedback" >> $GITHUB_ENV

    - name: Post Feedback as Comment
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ESCAPED_FEEDBACK: ${{ env.escaped_feedback }}
      run: |
        curl -v -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": $ESCAPED_FEEDBACK}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

    - name: Cleanup Feedback File
      run: rm feedback.txt

  skip-review:
    runs-on: ubuntu-latest
    # Only run if the target branch is NOT preview
    if: github.event.pull_request.base.ref != 'preview'
    
    steps:
    - name: Post Skip Message
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"body": "ℹ️ Automated code review is only enabled for pull requests targeting the `preview` branch."}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
